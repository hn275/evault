services:

  traefik:
    container_name: evault-traefik
    image: traefik:v3.4
    ports:
      - "5173:80"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - server
      - webui
    command:
      - --api.insecure=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80

  server:
    container_name: evault-server
    build:
      context: ./server
      dockerfile: ../dockerfiles/server.development.Dockerfile
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.server.rule=PathPrefix(`/api`)"
      - "traefik.http.routers.server.entrypoints=web"
      - "traefik.http.services.server.loadbalancer.server.port=8000"
    volumes:
      - ./server/src:/evault_server/src
      - ./server/Cargo.toml:/evault_server/Cargo.toml
      - ./server/Cargo.lock:/evault_server/Cargo.lock
      - server-data:/evault_server/target
    env_file: ".env"
    depends_on:
      - redis
      - postgres

  webui:
    container_name: evault-webui
    build:
      context: ./webui
      dockerfile: ../dockerfiles/webui.development.Dockerfile
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.web.rule=PathPrefix(`/`)"
      - "traefik.http.routers.web.entrypoints=web"
      - "traefik.http.services.web.loadbalancer.server.port=5173"
    volumes:
      - ./webui/src/:/evault_webui/src/

  redis:
    container_name: evault-redis
    image: redis:8.0.2-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    environment:
      - REDIS_REPLICATION_MODE=master

  postgres:
    container_name: evault-postgres
    image: postgres:17.5-alpine3.22
    ports:
      - "5432:5432"
    volumes:
      - pg-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=evault
      - POSTGRES_USER=foo
      - POSTGRES_PASSWORD=bar

volumes:
  server-data:
  pg-data:
  redis-data:
